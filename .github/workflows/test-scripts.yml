name: Run Python Scripts

on:
  workflow_dispatch:
    inputs:
      url:
        description: "Url to be used during script execution"
        required: true
        type: string
      environment:
        description: "Which API Key to use"
        default: preview
        required: true
        type: choice
        options:
          - preview
          - production

  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  execute-python-scripts:
    # Running on both ubuntu and windows
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    env:
      # Storing the user-supplied URL
      TOFUPILOT_URL: ${{ secrets.TOFUPILOT_URL }}
      # Forcing Python to run in UTF-8 mode for all steps in this job
      PYTHONUTF8: "1"

    steps:
      # Checking out the repository
      - name: Checking out the repository
        uses: actions/checkout@v3

      - name: Changing code page to UTF-8 (Windows only)
        if: runner.os == 'Windows'
        run: chcp 65001

      # Setting the appropriate API key based on environment choice
      - name: Setting TOFUPILOT_API_KEY
        shell: bash
        run: |
          if [ "${{ github.event.inputs.environment }}" = "preview" ]; then
            echo "TOFUPILOT_API_KEY=${{ secrets.PREVIEW_API_KEY }}" >> $GITHUB_ENV
          else
            echo "TOFUPILOT_API_KEY=${{ secrets.PRODUCTION_API_KEY }}" >> $GITHUB_ENV
          fi

      # Setting up Python
      - name: Setting up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # Installing dependencies
      - name: Installing dependencies
        shell: bash
        run: |
          pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Running all Python scripts
      - name: Running all Python scripts
        shell: bash
        run: |
          echo "Testing branch ${{ env.TOFUPILOT_URL }}"
          find . -type f -name 'main.py' \
            -not -path '*/venv/*' \
            -not -path '*/.*/*' \
            -print0 | while IFS= read -r -d '' file; do

            directory="$(dirname "$file")"

            if [ -f "$directory/requirements.txt" ]; then
              pip install -r "$directory/requirements.txt"
            fi

            echo "Running files in $directory"

            (
              cd "$directory" || exit
              python main.py
            )
          done
